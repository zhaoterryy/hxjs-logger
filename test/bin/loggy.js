// Generated by Haxe 4.0.0-preview.4+1e3e5e0
if (process.version < "v4.0.0") console.warn("Module " + (typeof(module) == "undefined" ? "" : module.filename) + " requires node.js version 4.0.0 or higher");
(function ($hx_exports) { "use strict";
var $hxEnums = {};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
var js_node_Fs = require("fs");
var loggy_js_LogOverride = function() { };
var loggy_js_Loggy = $hx_exports["Loggy"] = function() { };
loggy_js_Loggy.trace = function(v,infos) {
	var msg = v;
	if(infos != null && infos.customParams != null) {
		msg += " " + infos.customParams.toString();
	}
	var args = infos != null ? ["" + infos.fileName + ":" + infos.lineNumber + ":",msg] : [msg];
	if(infos != null) {
		loggy_util_Storage.push({ level : "log", fileName : infos.fileName, lineNumber : infos.lineNumber, msg : msg.toString()});
	} else {
		loggy_util_Storage.push({ level : "log", msg : msg.toString()});
	}
	loggy_js_LogOverride.ogLog.apply(window.console,args);
};
loggy_js_Loggy.error = function(v,infos) {
	var msg = v;
	if(infos != null && infos.customParams != null) {
		msg += " " + infos.customParams.toString();
	}
	var args = infos != null ? ["" + infos.fileName + ":" + infos.lineNumber + ":",msg] : [msg];
	var stack = new Error().stack;
	if(infos != null) {
		loggy_util_Storage.push({ level : "error", fileName : infos.fileName, lineNumber : infos.lineNumber, msg : msg.toString(), stack : stack});
	} else {
		loggy_util_Storage.push({ level : "error", msg : msg.toString(), stack : stack});
	}
	loggy_js_LogOverride.ogError.apply(window.console,args);
};
loggy_js_Loggy.warn = function(v,infos) {
	var msg = v;
	if(infos != null && infos.customParams != null) {
		msg += " " + infos.customParams.toString();
	}
	var args = infos != null ? ["" + infos.fileName + ":" + infos.lineNumber + ":",msg] : [msg];
	var stack = new Error().stack;
	if(infos != null) {
		loggy_util_Storage.push({ level : "warn", fileName : infos.fileName, lineNumber : infos.lineNumber, msg : msg.toString(), stack : stack});
	} else {
		loggy_util_Storage.push({ level : "warn", msg : msg.toString(), stack : stack});
	}
	loggy_js_LogOverride.ogWarn.apply(window.console,args);
};
var loggy_util_Storage = $hx_exports["LogStorage"] = function() { };
loggy_util_Storage.getJSONLog = function() {
	return JSON.stringify(loggy_util_Storage.log);
};
loggy_util_Storage.push = function(x) {
	loggy_util_Storage.log.push(x);
};
loggy_util_Storage.saveToFile = function(path) {
	return new Promise(function(success,reject) {
		var tmp = loggy_util_Storage.getJSONLog();
		js_node_Fs.writeFile(path,tmp,function(err) {
			if(err != null) {
				reject(err);
			}
			success(null);
		});
	});
};
loggy_js_LogOverride.ogLog = window.console.log;
loggy_js_LogOverride.ogError = window.console.error;
loggy_js_LogOverride.ogWarn = window.console.warn;
loggy_util_Storage.log = [];
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this);
